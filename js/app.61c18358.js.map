{"version":3,"file":"js/app.61c18358.js","mappings":"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","sources":["webpack://enigmatrainer/./src/App.vue","webpack://enigmatrainer/./src/components/HelloWorld.vue","webpack://enigmatrainer/./src/components/HelloWorld.vue?bd04","webpack://enigmatrainer/./src/App.vue?7ccd","webpack://enigmatrainer/./src/main.js","webpack://enigmatrainer/webpack/bootstrap","webpack://enigmatrainer/webpack/runtime/chunk loaded","webpack://enigmatrainer/webpack/runtime/compat get default export","webpack://enigmatrainer/webpack/runtime/define property getters","webpack://enigmatrainer/webpack/runtime/global","webpack://enigmatrainer/webpack/runtime/hasOwnProperty shorthand","webpack://enigmatrainer/webpack/runtime/publicPath","webpack://enigmatrainer/webpack/runtime/jsonp chunk loading","webpack://enigmatrainer/webpack/startup"],"sourcesContent":["<template>\n  <img class=\"logo\" src=\"./assets/logo.webp\" alt=\"Enigma Trainer Logo\" width=\"500\" />\n  <HelloWorld />\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  }\n}\n</script>\n\n<style>\n* {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    border: 0;\n    padding: 0;\n    margin: 0;\n}\n\nhtml {\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    font-size: 55%;\n}\n\nhtml, body {\n    width: 100%;\n    height: 100%;\n}\n\nbody {\n    font-size: 2rem;\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    font-weight: 400;\n    line-height: 1.5;\n    background-color: black;\n    color: #fff;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #fff;\n  background-color: black;\n  height: 100vh;\n  overflow: hidden;\n}\n\n.logo {\n  max-width: 100%;\n  height: auto;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n\n@media (max-width: 767px) {\n\t.logo {\n\t\twidth: 300px;\n\t}\n}\n</style>\n","<template>\n\t<div>\n\t\t<div v-if=\"showSettings\" class=\"settings-popup\">\n\t\t\t\t<!-- Close button for the popup -->\n\t\t\t\t<div class=\"close\" @click=\"showSettings = false\">\n\t\t\t\t\t<svg width=\"15\" height=\"15\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M15 13.459l-5.01-4.926 4.92-4.969-2.218-2.218-4.935 4.998-4.986-4.921L0 3.564l4.988 4.937-4.921 4.986L2.218 15l4.956-4.986 4.969 4.92z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h2>Settings</h2>\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<h3>General</h3>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"considerYAsVowel\"> Consider \"Y\" as a vowel\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<h3>Categories to include</h3>\n\t\t\t\t\t<div v-for=\"category in Object.keys(categories)\" :key=\"category\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"selectedCategories\" :value=\"category\">\n\t\t\t\t\t\t\t{{ category }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t<div class=\"hand-container\">\n\t\t\t<img src=\"../assets/hands.png\" alt=\"Hands Image\" />\n\n\t\t\t<div v-for=\"position in 10\" :key=\"position\"\n\t\t\t\t:style=\"{ top: lightPositions[position - 1].y, left: lightPositions[position - 1].x }\" class=\"light-effect\"\n\t\t\t\t:class=\"{ 'active-light': activeLight === position }\">\n\t\t\t</div>\n\n\t\t\t<div v-if=\"reveal\" class=\"reveal\">\n\t\t\t\tI was thinking of... {{ selectedWord }}!\n\t\t\t</div>\n\n\t\t\t<div v-if=\"!reveal && gameStarted\" class=\"reveal\">\n\t\t\t\tWhat word am I thinking of?\n\t\t\t</div>\n\n\t\t</div>\n\t\t<div class=\"controls\">\n\n\t\t\t<button class=\"primary btn\" v-if=\"!gameStarted\" @click=\"startGame\">Start</button>\n\t\t\t<button class=\"secondary btn light\" v-if=\"!gameStarted\" @click=\"showSettings = true\">Settings</button>\n\n\t\t\t<div class=\"message\" v-if=\"revealedCategory\">Category: {{ selectedCategory }}</div>\n\t\t\t<div class=\"message\" v-if=\"revealedLetterShape\">Shape of First Letter: {{ letterShape }}</div>\n\t\t\t<div class=\"message\" v-if=\"generatedWordFromLetter\">{{ generatedWordFromLetter }}</div>\n\n\t\t\t<div v-if=\"gameStarted\" class=\"game-controls\">\n\t\t\t\t<button class=\"primary\" @click=\"revealCategory\">What's the Category?</button>\n\t\t\t\t<div class=\"letters\">\n\t\t\t\t\t<h2>Figure out the letters</h2>\n\t\t\t\t\t<button class=\"primary\" @click=\"showWordLength\">How many letters?</button>\n\t\t\t\t\t<button class=\"primary\" @click=\"showFirstVowel\">Where's the first vowel?</button>\n\t\t\t\t\t<button class=\"primary\" @click=\"showSecondVowel\">Where's the second vowel?</button>\n\t\t\t\t\t<button class=\"primary\" @click=\"revealLetterShape\">What's the shape of the first letter?</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"lexicon\">\n\t\t\t\t\t<h2>Name a word beginning with the</h2>\n\t\t\t\t\t<button class=\"primary\" @click=\"getWordFromLetterIndex(2)\">Second letter</button>\n\t\t\t\t\t<button class=\"primary\" @click=\"getWordFromLetterIndex(3)\">Third letter</button>\n\t\t\t\t\t<button class=\"primary\" @click=\"getWordFromLetterIndex(4)\">Fourth letter</button>\n\t\t\t\t\t<button class=\"primary\" @click=\"getWordFromLetterIndex('last')\">Last letter</button>\n\t\t\t\t</div>\n\t\t\t\t<br><br>\n\t\t\t\t<button class=\"success\" @click=\"revealWord\">Tell me the word!</button>\n\t\t\t\t<button class=\"error\" @click=\"resetWord\">Reset</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tcategories: {\n\t\t\t\tManmadeInHand: [\"ABACUS\", \"ACTIONMAN\", \"ADAPTOR\", \"AERIAL\", \"AERO\", \"AFTERSHAVE\", \"AFTERSUN\", \"AIRBRUSH\", \"AIRCON\", \"AIRCONDITIONER\", \"AIRFRESHENER\", \"AIRFRESHNER\", \"AIRFRIER\", \"AIRFRYER\", \"AIRPLANE\", \"AIRPOD\", \"AIRPODS\", \"AIRTAG\", \"ALARM\", \"ALARMCLOCK\", \"ALEXA\", \"ALUMINUMFOIL\", \"AMERICAN\", \"AMP\", \"AMPLIFIER\", \"ANALBEAD\", \"ANALBEADS\", \"ANCHOR\", \"ANTENNA\", \"ANVIL\", \"APP\", \"APPLE\", \"APPLEPIE\", \"APRON\", \"AQUARIUM\", \"ARMBAND\", \"ARMCHAIR\", \"ARMOUR\", \"ARMREST\", \"ARROW\", \"ARROWHEAD\", \"ASHTRAY\", \"ATLAS\", \"AUTOMOBILE\", \"AXE\", \"BACKPACK\", \"BADGE\", \"BAG\", \"BAGPIPE\", \"BAGPIPES\", \"BALL\", \"BALLOON\", \"BALLPOINTPEN\", \"BANDAID\", \"BANJO\", \"BANKNOTE\", \"BANNER\", \"BARBECUE\", \"BARBIE\", \"BAROMETER\", \"BARREL\", \"BASEBALL\", \"BASIN\", \"BASKET\", \"BASKETBALL\", \"BASS\", \"BATHMAT\", \"BATTERY\", \"BEACHBALL\", \"BEAD\", \"BEADS\", \"BEAKER\", \"BEANBAG\", \"BEANIE\", \"BEER\", \"BELL\", \"BELT\", \"BENCH\", \"BERET\", \"BIBLE\", \"BICYCLE\", \"BIKE\", \"BILLET\", \"BIN\", \"BINOCULARS\", \"BISCUIT\", \"BISCUITS\", \"BLACKBOARD\", \"BLADE\", \"BLANKET\", \"BLEACH\", \"BLENDER\", \"BLIND\", \"BLINDS\", \"BLOUSE\", \"BLUEMOON\", \"BLUNT\", \"BLUSHER\", \"BOARD\", \"BOARDGAME\", \"BOAT\", \"BODYARMOUR\", \"BOILER\", \"BOLLARD\", \"BOLT\", \"BOMB\", \"BONG\", \"BONGO\", \"BOOK\", \"BOOKMARK\", \"BOOMERANG\", \"BOOST\", \"BOOT\", \"BOPIT\", \"BOTTLE\", \"BOTTLECAP\", \"BOTTLEOPENER\", \"BOUNTY\", \"BOUQUET\", \"BOW\", \"BOWL\", \"BOWTIE\", \"BOX\", \"BOXERS\", \"BRA\", \"BRACELET\", \"BRACES\", \"BRACKET\", \"BREAD\", \"BREATHALYSER\", \"BRICK\", \"BRIEFCASE\", \"BROACH\", \"BROOM\", \"BRUSH\", \"BUBBLEGUM\", \"BUCKET\", \"BUENO\", \"BUGGY\", \"BUISNESSCARD\", \"BULB\", \"BULLET\", \"BULLETPROOFVEST\", \"BUMBAG\", \"BUN\", \"BUNGEE\", \"BUNGEECORD\", \"BUNTING\", \"BURGER\", \"BUSINESSCARD\", \"BUTTER\", \"BUTTON\", \"BUTTPLUG\", \"CABINET\", \"CABLE\", \"CAGE\", \"CAKE\", \"CALCULATOR\", \"CALENDAR\", \"CALIPER\", \"CALLIPER\", \"CAMCORDER\", \"CAMERA\", \"CAN\", \"CANDELABRA\", \"CANDLE\", \"CANDLESTICK\", \"CANDY\", \"CANE\", \"CANOE\", \"CANOPENER\", \"CANVAS\", \"CAP\", \"CAPGUN\", \"CAPO\", \"CAPSULE\", \"CAPTAIN\", \"CARAFE\", \"CARAMEL\", \"CARD\", \"CARDBOARD\", \"CARDBOARDBOX\", \"CARDIGAN\", \"CARDS\", \"CARKEY\", \"CARKEYS\", \"CARLING\", \"CARLSBERG\", \"CARMEX\", \"CARPET\", \"CART\", \"CARTON\", \"CARTRIDGE\", \"CASE\", \"CASKET\", \"CASSETTE\", \"CASSETTETAPE\", \"CAST\", \"CATALOGUE\", \"CATFLAP\", \"CAULDRON\", \"CAULK\", \"CD\", \"CELLO\", \"CELLOTAPE\", \"CELLPHONE\", \"CELLULARPHONE\", \"CEREAL\", \"CERTIFICATE\", \"CHAIN\", \"CHAINS\", \"CHAINSAW\", \"CHAIR\", \"CHALK\", \"CHAMPAGNE\", \"CHANDELIER\", \"CHAPSTICK\", \"CHARGER\", \"CHARM\", \"CHECK\", \"CHEESE\", \"CHEESEBURGER\", \"CHEESECAKE\", \"CHEQUE\", \"CHEQUEBOOK\", \"CHESS\", \"CHESSBOARD\", \"CHESSSET\", \"CHEST\", \"CHEWINGGUM\", \"CHIP\", \"CHIPS\", \"CHISEL\", \"CHOCOLATE\", \"CHOPPINGBOARD\", \"CHOPSTICK\", \"CHOPSTICKS\", \"CIGAR\", \"CIGARETTE\", \"CLAMP\", \"CLARINET\", \"CLAYMORE\", \"CLEANSER\", \"CLEATS\", \"CLIP\", \"CLIPBOARD\", \"CLIPPERS\", \"CLOCK\", \"CLOTH\", \"CLUTCH\", \"COASTER\", \"COAT\", \"COATHANGER\", \"COCACOLA\", \"COCK\", \"COCKRING\", \"COCKTAIL\", \"COFFEE\", \"COFFEEPOT\", \"COFFIN\", \"COIN\", \"COKE\", \"COLA\", \"COLLAR\", \"COLOGNE\", \"COLOR\", \"COLORINGBOOK\", \"COLORS\", \"COLOURINGBOOK\", \"COLOURS\", \"COMB\", \"COMFORTER\", \"COMIC\", \"COMICBOOK\", \"COMPASS\", \"COMPENDIUM\", \"COMPUTER\", \"CONCEALER\", \"CONCRETE\", \"CONDITIONER\", \"CONDOM\", \"CONDOMS\", \"CONE\", \"CONSOLE\", \"CONTACTLENS\", \"CONTACTLENSE\", \"CONTACTLENSES\", \"CONTAINER\", \"CONTROLLER\", \"CONVERTER\", \"COOKIE\", \"COOKIES\", \"COOLER\", \"COPIER\", \"CORD\", \"CORK\", \"CORKSCREW\", \"CORNICE\", \"COSTUME\", \"COT\", \"COTTONBUD\", \"COTTONWOOL\", \"COUPON\", \"CRACKER\", \"CRADLE\", \"CRATE\", \"CRAVAT\", \"CRAYON\", \"CREAM\", \"CREAMER\", \"CREDITCARD\", \"CRICKETBALL\", \"CRICKETBAT\", \"CRISP\", \"CRISPS\", \"CROISSANT\", \"CROSS\", \"CROSSBOW\", \"CROSSWORD\", \"CROWBAR\", \"CRUCIFIX\", \"CRUTCH\", \"CRYSTAL\", \"CUBE\", \"CUE\", \"CUFFLINK\", \"CUFFLINKS\", \"CUM\", \"CUP\", \"CUPBOARD\", \"CURLERS\", \"CURLINGIRON\", \"CURTAIN\", \"CURTAINS\", \"CUSHION\", \"CYCLE\", \"DAGGER\", \"DART\", \"DARTBOARD\", \"DEBITCARD\", \"DECANTER\", \"DECK\", \"DECKCHAIR\", \"DENTALFLOSS\", \"DENTURE\", \"DEODORANT\", \"DESK\", \"DESSERT\", \"DIABOLO\", \"DIAMOND\", \"DIAPER\", \"DIAPERS\", \"DIARY\", \"DICE\", \"DICK\", \"DICTIONARY\", \"DIDGERIDOO\", \"DIFFUSER\", \"DILDO\", \"DISC\", \"DISH\", \"DISINFECTANT\", \"DOLL\", \"DOLLARBILL\", \"DOMINO\", \"DOODLE\", \"DOOR\", \"DOORKNOB\", \"DOORMAT\", \"DOUGHNUT\", \"DRAIN\", \"DRAPES\", \"DRAWING\", \"DRAWINGPIN\", \"DREAMCATCHER\", \"DRESS\", \"DRILL\", \"DRONE\", \"DRPEPPER\", \"DRUM\", \"DUCKTAPE\", \"DUMBBELL\", \"DUMMY\", \"DUREX\", \"DUSTER\", \"DUSTPAN\", \"DUVET\", \"DVD\", \"DYNAMITE\", \"DYSON\", \"EARMUFF\", \"EARMUFFS\", \"EARPLUG\", \"EARPLUGS\", \"EARRING\", \"EARRINGS\", \"EASEL\", \"EASTEREGG\", \"EGGTIMER\", \"ELASTIC\", \"ELEPHANT\", \"ENCYCLOPAEDIA\", \"ENVELOPE\", \"ERASER\", \"EXACTOBLADE\", \"EXACTOKNIFE\", \"EXTINGUISHER\", \"EYELASHES\", \"EYEPATCH\", \"FACEBOOK\", \"FACECREAM\", \"FACEMASK\", \"FAG\", \"FAN\", \"FANNYPACK\", \"FAXMACHINE\", \"FEATHER\", \"FENCE\", \"FIGURINE\", \"FILOFAX\", \"FILTER\", \"FIREEXTINGUISHER\", \"FIREHYDRANT\", \"FIREWORK\", \"FISH\", \"FISHBOWL\", \"FISHINGNET\", \"FISHINGPOLE\", \"FISHINGROD\", \"FITBIT\", \"FLAG\", \"FLANNEL\", \"FLASHLIGHT\", \"FLASK\", \"FLATCAP\", \"FLIPCHART\", \"FLIPFLOP\", \"FLIPFLOPS\", \"FLIPPER\", \"FLIPPERS\", \"FLOAT\", \"FLOPPYDISC\", \"FLOSS\", \"FLOWER\", \"FLUTE\", \"FLYER\", \"FOIL\", \"FOOTBALL\", \"FOOTSTALL\", \"FORCEPS\", \"FORK\", \"FOUNDATION\", \"FRAME\", \"FRIES\", \"FRISBEE\", \"FRUITCAKE\", \"FRYER\", \"FRYINGPAN\", \"FUNNEL\", \"GALAXY\", \"GAMEBOY\", \"GATE\", \"GAVEL\", \"GEAR\", \"GEARSTICK\", \"GEL\", \"GENERATOR\", \"GHOST\", \"GIFTBAG\", \"GLASS\", \"GLASSES\", \"GLOBE\", \"GLOVE\", \"GLOVES\", \"GLOWSTICK\", \"GLUE\", \"GNOME\", \"GOGGLES\", \"GOLD\", \"GOLFCLUB\", \"GOOGLE\", \"GOWN\", \"GRAMOPHONE\", \"GRATER\", \"GRENADE\", \"GRIDDLE\", \"GRILL\", \"GRINDER\", \"GUITAR\", \"GUM\", \"GUN\", \"GYROSCOPE\", \"HAIRBAND\", \"HAIRBRUSH\", \"HAIRCLAY\", \"HAIRCLIP\", \"HAIRDRYER\", \"HAIRGEL\", \"HAIRSPRAY\", \"HAIRTIE\", \"HAIRWAX\", \"HAMBURGER\", \"HAMMER\", \"HAMMOCK\", \"HANDBAG\", \"HANDBREAK\", \"HANDCREAM\", \"HANDCUFF\", \"HANDCUFFS\", \"HANDGUN\", \"HANDKERCHIEF\", \"HANDLE\", \"HANDWARMER\", \"HANGER\", \"HARDDRIVE\", \"HARMONICA\", \"HARNESS\", \"HAT\", \"HATCHET\", \"HEADPHONES\", \"HEADSET\", \"HEATER\", \"HEIRLOOM\", \"HELICOPTER\", \"HELMET\", \"HIGHHEEL\", \"HIGHHEELS\", \"HINGE\", \"HOE\", \"HOLEPUNCH\", \"HOODIE\", \"HOOK\", \"HOOVER\", \"HORSESHOE\", \"HOSE\", \"HUBCAP\", \"HULAHOOP\", \"HYDRANT\", \"ICEBOX\", \"ICECHEST\", \"ICECREAM\", \"ICECUBE\", \"ICEPACK\", \"ICETRAY\", \"INCENSE\", \"INDICATOR\", \"INEARS\", \"INHALER\", \"INKCARTRIDGE\", \"INSTAGRAM\", \"INUKSHUK\", \"IPAD\", \"IPHONE\", \"IPOD\", \"IRNBRU\", \"IRON\", \"IRONINGBOARD\", \"JACKDANIELS\", \"JACKET\", \"JAR\", \"JAVELIN\", \"JEANS\", \"JELLY\", \"JENGA\", \"JERSEY\", \"JEWELRY\", \"JOURNAL\", \"JOYSTICK\", \"JUG\", \"JUICE\", \"JUICER\", \"JUMPER\", \"JUMPINGJACK\", \"JUUL\", \"KAYAK\", \"KEBAB\", \"KEG\", \"KETTLE\", \"KETTLEBELL\", \"KEY\", \"KEYBOARD\", \"KEYCHAIN\", \"KEYPAD\", \"KEYRING\", \"KEYS\", \"KINDLE\", \"KITCHENROLL\", \"KITKAT\", \"KLEENEX\", \"KNICKERS\", \"KNIFE\", \"KNOB\", \"KNUCKLEDUSTER\", \"KOMBUCHA\", \"LABEL\", \"LACE\", \"LADDER\", \"LADLE\", \"LAGER\", \"LAMP\", \"LAMPPOST\", \"LAMPSHADE\", \"LANTERN\", \"LANYARD\", \"LAPTOP\", \"LASAGNE\", \"LAWNMOWER\", \"LEAD\", \"LEAFBLOWER\", \"LEAFLET\", \"LEMONADE\", \"LENS\", \"LETTER\", \"LETTERBOX\", \"LICENSEPLATE\", \"LIGHT\", \"LIGHTBULB\", \"LIGHTER\", \"LILO\", \"LION\", \"LIPGLOSS\", \"LIPSALVE\", \"LIPSTICK\", \"LOAF\", \"LOAFERS\", \"LOCK\", \"LOCKER\", \"LOCKET\", \"LOLLIPOP\", \"LOLLY\", \"LOOFAH\", \"LOTION\", \"LUBE\", \"LUGGAGE\", \"LUNCH\", \"LUNCHBOX\", \"LUNCHSACK\", \"MACHETE\", \"MACRAME\", \"MAGAZINE\", \"MAGICMARKER\", \"MAGICWAND\", \"MAGNET\", \"MAGNIFYING\", \"MAGNIFYINGGLASS\", \"MAIL\", \"MANDOLIN\", \"MANUAL\", \"MAP\", \"MARACAS\", \"MARBLE\", \"MARKER\", \"MARKERPEN\", \"MARRACAS\", \"MARS\", \"MARSBAR\", \"MASCARA\", \"MASHER\", \"MASK\", \"MASTERCARD\", \"MAT\", \"MATCH\", \"MATCHBOX\", \"MATCHES\", \"MATTRESS\", \"MAYONNAISE\", \"MEDAL\", \"MEDALLION\", \"MEDICATION\", \"MEDICINE\", \"MEGAPHONE\", \"MEMORYBANK\", \"MEMORYCARD\", \"MEMORYSTICK\", \"MENORAH\", \"MENU\", \"METAL\", \"MICROCHIP\", \"MICROPHONE\", \"MICROWAVE\", \"MILK\", \"MILKSHAKE\", \"MILKYBAR\", \"MILKYWAY\", \"MILLIVOLTMETER\", \"MINIDISC\", \"MINT\", \"MIRROR\", \"MIXER\", \"MOBILE\", \"MOCCASIN\", \"MODELAIRPLANE\", \"MODELCAR\", \"MODEM\", \"MOISTURISER\", \"MONEY\", \"MONEYCLIP\", \"MONITOR\", \"MONOCLE\", \"MONOPOLY\", \"MOP\", \"MORTAR\", \"MOUSE\", \"MOUSEMAT\", \"MOUSEPAD\", \"MOUSETRAP\", \"MOUSSE\", \"MOUTHWASH\", \"MUG\", \"NAIL\", \"NAILFILE\", \"NAILPOLISH\", \"NAILWRITER\", \"NAPKIN\", \"NAPPY\", \"NECKLACE\", \"NECKTIE\", \"NEEDLE\", \"NEWLIST\", \"NEWSPAPER\", \"NIGHTY\", \"NINTENDO\", \"NOODLE\", \"NOODLES\", \"NOSERING\", \"NOTE\", \"NOTEBOOK\", \"NOTEPAD\", \"NUT\", \"OCULUS\", \"OINTMENT\", \"OPENER\", \"ORANGINA\", \"ORGAN\", \"ORNAMENT\", \"OVENGLOVE\", \"OVENGLOVES\", \"PACIFIER\", \"PACKAGE\", \"PACKET\", \"PAD\", \"PADDLE\", \"PADLOCK\", \"PAGE\", \"PAGER\", \"PAIL\", \"PAINT\", \"PAINTBRUSH\", \"PANEL\", \"PANTIES\", \"PANTS\", \"PAPER\", \"PAPERBAG\", \"PAPERCLIP\", \"PAPERSACK\", \"PAPERWEIGHT\", \"PARACHUTE\", \"PARCHMENT\", \"PASTA\", \"PAVLOVA\", \"PEARL\", \"PECANPIE\", \"PEELER\", \"PEG\", \"PEN\", \"PENCIL\", \"PENCILCASE\", \"PENCILSHARPENER\", \"PENDANT\", \"PENKNIFE\", \"PEPSI\", \"PERCOLATOR\", \"PERFUME\", \"PERONI\", \"PESTLE\", \"PETROLEUM\", \"PHONE\", \"PHONEBOOK\", \"PHONECASE\", \"PHOTO\", \"PHOTOFRAME\", \"PHOTOGRAPH\", \"PIANO\", \"PICTIONARY\", \"PICTURE\", \"PIE\", \"PIGGYBANK\", \"PIJAMAS\", \"PILL\", \"PILLBOX\", \"PILLOW\", \"PILLOWCASE\", \"PILLS\", \"PIN\", \"PINATA\", \"PINCUSHION\", \"PINGPONGBALL\", \"PINT\", \"PINTGLASS\", \"PIPE\", \"PIPETTE\", \"PISTOL\", \"PIZZA\", \"PIÑATA\", \"PLANTPOT\", \"PLASTER\", \"PLASTIC\", \"PLASTICBAG\", \"PLATE\", \"PLAYSTATION\", \"PLECTRUM\", \"PLIERS\", \"PLUG\", \"PLUNGER\", \"POCKETKNIFE\", \"POGO\", \"POGOSTICK\", \"POISON\", \"POKERCHIP\", \"POLE\", \"POLISH\", \"POOLBALL\", \"POOLCUE\", \"POPCORN\", \"POPPER\", \"POPSICLE\", \"PORCELAIN\", \"PORTFOLIO\", \"POSTCARD\", \"POSTER\", \"POSTIT\", \"POSTITNOTES\", \"POT\", \"POTATOPEELER\", \"POUCH\", \"POUND\", \"POWERBANK\", \"POWERPACK\", \"PRAM\", \"PRINTER\", \"PROJECTOR\", \"PROSECCO\", \"PROTRACTOR\", \"PUMP\", \"PUMPKIN\", \"PUPPET\", \"PURIFIER\", \"PURSE\", \"PUZZLEPIECE\", \"PYJAMAS\", \"QTIP\", \"QUILL\", \"QURAN\", \"RACK\", \"RACKET\", \"RADIATOR\", \"RADIO\", \"RAG\", \"RAILING\", \"RAKE\", \"RAZOR\", \"RAZORBLADE\", \"RECEIPT\", \"RECORD\", \"RECORDER\", \"REMOTE\", \"RESERVED\", \"RETAINER\", \"RIBBON\", \"RIFLE\", \"RIM\", \"RING\", \"RIZLA\", \"ROD\", \"ROLEX\", \"ROLLER\", \"ROLLERBLADE\", \"ROLLINGPIN\", \"ROOMFRESHNER\", \"ROPE\", \"ROUTER\", \"ROVER\", \"RUBBER\", \"RUBBERBAND\", \"RUBIKSCUBE\", \"RUG\", \"RULER\", \"SACK\", \"SADDLE\", \"SAFETYBELT\", \"SAFETYPIN\", \"SALTSHAKER\", \"SAND\", \"SANDALS\", \"SANDER\", \"SANDPAPER\", \"SANDWICH\", \"SANITISER\", \"SATELLITE\", \"SAUCEPAN\", \"SAUCER\", \"SAUSAGE\", \"SAUSAGEROLL\", \"SAXOPHONE\", \"SCALE\", \"SCALES\", \"SCANNER\", \"SCARF\", \"SCEPTRE\", \"SCISSORS\", \"SCONCE\", \"SCOOTER\", \"SCRABBLE\", \"SCRATCHCARD\", \"SCREEN\", \"SCREW\", \"SCREWDRIVER\", \"SCRIPT\", \"SCRUNCHIE\", \"SCRUNCHIES\", \"SCRUNCHY\", \"SCULPTURE\", \"SEAT\", \"SEATBELT\", \"SEGWAY\", \"SELLOTAPE\", \"SERVIETTE\", \"SEXDOLL\", \"SHAKER\", \"SHAMPOO\", \"SHARPENER\", \"SHARPIE\", \"SHAVER\", \"SHEET\", \"SHEETS\", \"SHELVES\", \"SHIRT\", \"SHIV\", \"SHOE\", \"SHOEBOX\", \"SHOELACE\", \"SHOES\", \"SHOPPINGCART\", \"SHORTBREAD\", \"SHORTS\", \"SHOTGUN\", \"SHOVEL\", \"SHOWERCAP\", \"SHOWERCURTAIN\", \"SHOWERGEL\", \"SHOWERHEAD\", \"SHUTTERS\", \"SHUTTLECOCK\", \"SIEVE\", \"SIGN\", \"SILK\", \"SILVERWARE\", \"SINK\", \"SKATEBOARD\", \"SKETCHBOOK\", \"SKEWER\", \"SKIPPINGROPE\", \"SKIRT\", \"SKIS\", \"SKITTLE\", \"SLAB\", \"SLEDGE\", \"SLEDGEHAMMER\", \"SLING\", \"SLINGSHOT\", \"SLINKY\", \"SLIPPER\", \"SLIPPERS\", \"SMARTPHONE\", \"SNARE\", \"SNEAKER\", \"SNEAKERS\", \"SNICKERS\", \"SNOOKERBALL\", \"SNORKEL\", \"SNOWBALL\", \"SNOWBOARD\", \"SNOWGLOBE\", \"SOAP\", \"SOCCERBALL\", \"SOCK\", \"SOFA\", \"SORBET\", \"SOUP\", \"SPACER\", \"SPAGHETTI\", \"SPANNER\", \"SPARKLERSPATULA\", \"SPATULAR\", \"SPEAKER\", \"SPEAR\", \"SPECTACLES\", \"SPINNINGTOP\", \"SPLIFF\", \"SPOKE\", \"SPONGE\", \"SPOON\", \"SPRAY\", \"SPRAYCAN\", \"SPRAYPAINT\", \"SPRING\", \"SPRINKLER\", \"SPRITE\", \"SPRITZER\", \"SPYGLASS\", \"STAMP\", \"STAND\", \"STAPLE\", \"STAPLER\", \"STATUE\", \"STETHOSCOPE\", \"STICKER\", \"STICKERS\", \"STILETTO\", \"STIRRER\", \"STOOL\", \"STRAINER\", \"STRAW\", \"STREAMER\", \"STRIMMER\", \"STRING\", \"STROLLER\", \"STYROFOAM\", \"SUB\", \"SUGAR\", \"SUITCASE\", \"SUNCREAM\", \"SUNGLASSES\", \"SUPERGLUE\", \"SURFBOARD\", \"SUSHI\", \"SUSHIROLL\", \"SUSPENDER\", \"SUSPENDERS\", \"SWEATBAND\", \"SWEATER\", \"SWIMMERS\", \"SWITCH\", \"SWORD\", \"SYRINGE\", \"TABLE\", \"TABLESPOON\", \"TABLET\", \"TACO\", \"TAG\", \"TAKEOUT\", \"TAMAGOTCHI\", \"TAMPAX\", \"TAMPON\", \"TANKARD\", \"TAP\", \"TAPE\", \"TAPEMEASURE\", \"TAPERECORDER\", \"TATTOO\", \"TAXIDERMY\", \"TEABAG\", \"TEALIGHT\", \"TEAPOT\", \"TEASPOON\", \"TEATOWEL\", \"TEDDY\", \"TEDDYBEAR\", \"TELEPHONE\", \"TELESCOPE\", \"TELEVISION\", \"TENNIS BALL\", \"TENNISBALL\", \"TENT\", \"TEQUILA\", \"TESTTUBE\", \"THERMOMETER\", \"THERMOSTAT\", \"THESAURUS\", \"THIMBLE\", \"THONG\", \"THREAD\", \"THUMBTACK\", \"TICKET\", \"TIE\", \"TILE\", \"TIMER\", \"TINOPENER\", \"TIRE\", \"TISSUE\", \"TOASTER\", \"TOBACCO\", \"TOBOGGAN\", \"TOILET\", \"TOILETPAPER\", \"TOKEN\", \"TONGS\", \"TOOTH\", \"TOOTHBRUSH\", \"TOOTHPASTE\", \"TOOTHPICK\", \"TOP\", \"TOPHAT\", \"TORCH\", \"TORTILLA\", \"TOWEL\", \"TOYAIRPLANE\", \"TOYCAR\", \"TOYMOUSE\", \"ΤΟΥΡΟΤ\", \"TOYRAT\", \"TOYSOLDIER\", \"TOYTRUCK\", \"TRAINER\", \"TRAINERS\", \"TRAMPOLINE\", \"TRANSFORMER\", \"TRANSISTOR\", \"TRAP\", \"TRAPDOOR\", \"TRASHBIN\", \"TRASHCAN\", \"TRAY\", \"TREADMILL\", \"TREASURE\", \"TRENCHCOAT\", \"TRIANGLE\", \"TRICYCLE\", \"TRIMMER\", \"TRIMMERS\", \"TROMBONE\", \"TROPHY\", \"TROUSERS\", \"TROWEL\", \"TRUMPET\", \"TRUNK\", \"TRUNKS\", \"TSHIRT\", \"TUBA\", \"TUBE\", \"TUMBLER\", \"TUPPERWARE\", \"TURPENTINE\", \"TURTLENECK\", \"TWEEZER\", \"TWEEZERS\", \"TWIX\", \"TYPEWRITER\", \"TYRE\", \"UMBRELLA\", \"UNDERWEAR\", \"UNICYCLE\", \"UNIFORM\", \"URN\", \"USB\", \"USBSTICK\", \"VACUUM\", \"VAPE\", \"VARNISH\", \"VASE\", \"VASELINE\", \"VEIL\", \"VENT\", \"VENTILATOR\", \"VEST\", \"VIAL\", \"VIBRATOR\", \"VICE\", \"VIDEO\", \"VIDEOGAME\", \"VIDEOTAPE\", \"VIMTO\", \"VINYL\", \"VIOLIN\", \"VISACARD\", \"VITAMIN\", \"VITAMINS\", \"VODKA\", \"WAISTCOAT\", \"WALKIETALKIE\", \"WALLET\", \"WAND\", \"WASHER\", \"WATCH\", \"WATERCAN\", \"WATERINGCAN\", \"WATERPISTOL\", \"WAX\", \"WHEEL\", \"WHEELBARROW\", \"WHIP\", \"WHISK\", \"WHISKY\", \"WHISTLE\", \"WHITEBOARD\", \"WIG\", \"WINDOW\", \"WINDOWFRAME\", \"WINE\", \"WINEGLASS\", \"WIPE\", \"WIRE\", \"WOK\", \"WRAP\", \"WRENCH\", \"XBOX\", \"XYLOPHONE\", \"YO YO\", \"YOGAMAT\", \"YOYO\", \"ZIP\", \"ZIPPER\", \"ZIPPO\"],\n\t\t\t\tManmadeBig: [\"AIRCRAFT\", \"AIRPLANE\", \"ALLEY\", \"ALTAR\", \"AMBULANCE\", \"AMPLIFIER\", \"ANCHOR\", \"APARTMENT\", \"AQUARIUM\", \"ARCHWAY\", \"ARMCHAIR\", \"ATM\", \"AUDI\", \"AUTO\", \"AUTOMOBILE\", \"AWNING\", \"BALCONY\", \"BANISTER\", \"BANNER\", \"BAR\", \"BARBECUE\", \"BARBERS\", \"BARGE\", \"BARGEPOLE\", \"BARREL\", \"BARRIER\", \"BASEMENT\", \"BASIN\", \"BATH\", \"BATHROOM\", \"BATHTUB\", \"BATTLESHIP\", \"BED\", \"BEDROOM\", \"BELL\", \"BENCH\", \"BICYCLE\", \"BIKE\", \"BILLBOARD\", \"BLACKBOARD\", \"BLIND\", \"BLINDS\", \"BUS\", \"CABIN\", \"CABINET\", \"CAFE\", \"CAGE\", \"CANOE\", \"CAR\", \"CARAVAN\", \"CARPARK\", \"CARPET\", \"CARRIAGE\", \"CASHMACHINE\", \"CASTLE\", \"CATHEDRAL\", \"CAULDRON\", \"CAVE\", \"CEILING\", \"CELLO\", \"CEMETERY\", \"CHAIR\", \"CHANDELIER\", \"CHECKOUT\", \"CHEST\", \"CHIMNEY\", \"CHURCH\", \"COACH\", \"COFFIN\", \"COLISEUM\", \"COLOSSEUM\", \"COLUMN\", \"COMPOST\", \"CONCORD\", \"CONCRETE\", \"CONDO\", \"CONE\", \"CONSERVATORY\", \"CONVERTIBLE\", \"COOKER\", \"CORRIDOR\", \"COSTUME\", \"COUCH\", \"COUNTER\", \"COURTHOUSE\", \"CRADLE\", \"CRANE\", \"CRASHDUMMY\", \"CREMATORIUM\", \"CREMATORY\", \"CROSSING\", \"CRUISE\", \"CUBICLE\", \"CUPBOARD\", \"CURTAIN\", \"CURTAINS\", \"CYCLE\", \"DECKCHAIR\", \"DECKING\", \"DEN\", \"DESK\", \"DIGGER\", \"DISH\", \"DISHWASHER\", \"DOOR\", \"DRAINPIPE\", \"DRESSER\", \"DRIVEWAY\", \"EARTHQUAKE\", \"ELEVATOR\", \"ENGINE\", \"ESCALATOR\", \"FAN\", \"FEATURE\", \"FERRARI\", \"FIRE\", \"FIREENGINE\", \"FIREPLACE\", \"FIRETRUCK\", \"FLAT\", \"FLIPCHART\", \"FLOOR\", \"FLOORBOARD\", \"FOOTBRIDGE\", \"FOOTPATH\", \"FORKLIFT\", \"FORT\", \"FOUNTAIN\", \"FRAME\", \"FREEWAY\", \"FREEZER\", \"FRIDGE\", \"FRIDGEFREEZER\", \"FURNACE\", \"GAMESHOW\", \"GARAGE\", \"GARDEN\", \"GASSTOVE\", \"GLASS\", \"GONG\", \"GRAMOPHONE\", \"GRATE\", \"GRAVEYARD\", \"GUN\", \"GYM\", \"GYMNASIUM\", \"HAIRDRESSER\", \"HALLWAY\", \"HAMMOCK\", \"HARP\", \"HEATER\", \"HEIRLOOM\", \"HELICOPTER\", \"HELIPAD\", \"HIGHCHAIR\", \"HIGHSTREET\", \"HIGHWAY\", \"HOOVER\", \"HOSPITAL\", \"HOSTEL\", \"HOTEL\", \"HOTTUB\", \"HOUSE\", \"HYDROFOIL\", \"HYDROPLANE\", \"IGLOO\", \"INCUBATOR\", \"INFIRMARY\", \"INUKSHUK\", \"IRONINGBOARD\", \"JACUZZI\", \"JAGUAR\", \"JET\", \"JETSKI\", \"JUMBOJET\", \"KAYAK\", \"KEYBOARD\", \"KITCHEN\", \"LAB\", \"LABORATORY\", \"LADDER\", \"LAMP\", \"LAMPPOST\", \"LAVATORY\", \"LAWNMOWER\", \"LETTERBOX\", \"LIDO\", \"LIFT\", \"LIMO\", \"LIMOUSINE\", \"LIVINGROOM\", \"LOCKER\", \"LOGCABIN\", \"LORRY\", \"LUGGAGE\", \"MAISONETTE\", \"MALL\", \"MANNEQUIN\", \"MARKET\", \"MARQUEE\", \"MARQUIS\", \"MASSAGECHAIR\", \"MATTRESS\", \"MERCEDES\", \"MIRROR\", \"MISSILE\", \"MOTORBIKE\", \"MOTORWAY\", \"MOUNTAIN\", \"MOWER\", \"NEWSAGENT\", \"NIGHTCLUB\", \"ORCHESTRA\", \"ORGAN\", \"OVEN\", \"OVERPASS\", \"PACKAGE\", \"PAINT\", \"PAINTING\", \"PANEL\", \"PANTRY\", \"PARACHUTE\", \"PARK\", \"PATH\", \"PAVEMENT\", \"PEUGEOT\", \"PEW\", \"PHOTOCOPIER\", \"PIANO\", \"PILLAR\", \"PLANE\", \"PLASTIC\", \"PLATFORM\", \"PLAYGROUND\", \"POLE\", \"POND\", \"POOL\", \"POSTBOX\", \"POSTER\", \"PRAM\", \"PRISON\", \"PUB\", \"PUMP\", \"PYLON\", \"PYRAMID\", \"PYRAMIDS\", \"RADIATOR\", \"RAIL\", \"RAILINGS\", \"RAILWAY\", \"RECLINER\", \"REFRIGERATOR\", \"RESTAURANT\", \"RESTROOM\", \"ROAD\", \"ROCKET\", \"ROCKINGCHAIR\", \"ROLLERCOASTER\", \"ROOF\", \"ROOFRACK\", \"ROUNDABOUT\", \"SAFE\", \"SAILBOAT\", \"SAILINGBOAT\", \"SATELLITE\", \"SAUNA\", \"SCAFFOLDING\", \"SCALE\", \"SCALES\", \"SCARECROW\", \"SCULPTURE\", \"SEESAW\", \"SEGWAY\", \"SEWERS\", \"SHED\", \"SHELTER\", \"SHIP\", \"SHOP\", \"SHOPPINGMALL\", \"SHOWER\", \"SHUTTLE\", \"SIDEWALK\", \"SIGNPOST\", \"SINK\", \"SKYLIGHT\", \"SKYSCRAPER\", \"SLIDE\", \"SLIDINGDOOR\", \"SOFA\", \"SOFABED\", \"SPA\", \"SPACESHIP\", \"SPACESHUTTLE\", \"SPACESTATION\", \"SPEAKER\", \"SPEAKERS\", \"SPEAR\", \"SPEEDBOAT\", \"STADIUM\", \"STAGE\", \"STAIRCASE\", \"STAIRS\", \"STATION\", \"STATUE\", \"STEEPLE\", \"STEPLADDER\", \"STEPS\", \"STOREROOM\", \"STOVE\", \"STREET\", \"STREETLAMP\", \"STREETLIGHT\", \"STYROFOAM\", \"SUBMARINE\", \"SUITCASE\", \"SUNBED\", \"SUPERMARKET\", \"SWIMMINGPOOL\", \"SWING\", \"TABLE\", \"TANK\", \"TANKER\", \"TAXI\", \"TAXIDERMY\", \"TELESCOPE\", \"TELEVISION\", \"TENT\", \"TERRACE\", \"TESLA\", \"THEATRE\", \"THEMEPARK\", \"TILE\", \"TILL\", \"TOILET\", \"TORPEDO\", \"TOWER\", \"TRACTOR\", \"TRAFFICLIGHT\", \"TRAILER\", \"TRAIN\", \"TRAINTRACK\", \"TRAINTRACKS\", \"TRANSFORMER\", \"TRAPDOOR\", \"TREADMILL\", \"TREE\", \"TREEHOUSE\", \"TRICYCLE\", \"TROLLEY\", \"TRUCK\", \"TRUNK\", \"TUB\", \"TUBE\", \"TUMBLEDRYER\", \"TUNNEL\", \"TURBINE\", \"TV\", \"TYPEWRITER\", \"UFO\", \"UNDERGROUND\", \"UNDERPASS\", \"UNICYCLE\", \"VENT\", \"VENTILATOR\", \"VILLAGE\", \"VINEYARD\", \"WAGON\", \"WALL\", \"WALLPAPER\", \"WAREHOUSE\", \"WASHINGMACHINE\", \"WASHROOM\", \"WATCHTOWER\", \"WATERJUG\", \"WELL\", \"WESTFIELD\", \"WESTFIELDS\", \"WHEELBARROW\", \"WHEELCHAIR\", \"WHITEBOARD\", \"WINDMILL\", \"WINDOW\", \"WINDOWFRAME\", \"WINDTURBINE\", \"WIRE\", \"WORKSURFACE\", \"YACHT\", \"ZEPPELIN\", \"ZOO\", \"ZORB\"],\n\t\t\t\tNaturalInHand: [\"ACORN\", \"AIR\", \"ALMOND\", \"ALMONDS\", \"AMBER\", \"ANIMAL\", \"APPLE\", \"APRICOT\", \"ATOM\", \"AUBERGINE\", \"BANANA\", \"BARK\", \"BEAN\", \"BEETLE\", \"BEETROOT\", \"BLACKBERRY\", \"BLUEBERRY\", \"BONE\", \"BRANCH\", \"BRAZILNUT\", \"BROCCOLI\", \"BUG\", \"CABBAGE\", \"CACTUS\", \"CARBON\", \"CARDAMOM\", \"CARROT\", \"CASHMERE\", \"CELL\", \"CHARM\", \"CHILLI\", \"CLAM\", \"CLEMENTINE\", \"CLOUD\", \"CLOVE\", \"COAL\", \"COCK\", \"COCKLE\", \"COCOON\", \"COFFEE\", \"COFFEEBEAN\", \"CONCRETE\", \"CONCRETE\", \"COPPER\", \"COTTON\", \"COURGETTE\", \"CRANBERRY\", \"CRYSTAL\", \"CUCUMBER\", \"DAFFODIL\", \"DIAMOND\", \"DICK\", \"DIRT\", \"DUST\", \"EGGSHELL\", \"ELECTRIC\", \"ELECTRICITY\", \"EMERALD\", \"ENERGY\", \"FEATHER\", \"FIRE\", \"FISH\", \"FLOUR\", \"FLOWER\", \"FRUIT\", \"GEM\", \"GEMSTONE\", \"GHOST\", \"GIFT\", \"GLASS\", \"GOLD\", \"GOOSEBERRY\", \"GRAPE\", \"GRASS\", \"GRIT\", \"HAIR\", \"HAZELNUT\", \"HEART\", \"HEATHER\", \"HEIRLOOM\", \"HERB\", \"ICE\", \"ICECUBE\", \"INK\", \"IRON\", \"JADE\", \"JUICE\", \"KUMQUAT\", \"LADYBUG\", \"LEAF\", \"LEMON\", \"LENTIL\", \"LIGHT\", \"LILLY\", \"LIME\", \"LIVER\", \"MAGNET\", \"MARBLE\", \"MELON\", \"METAL\", \"MONSTERA\", \"MOSS\", \"MUD\", \"MUSSEL\", \"NEST\", \"NUT\", \"OIL\", \"OLIVE\", \"ONION\", \"ORANGE\", \"OYSTER\", \"PAINT\", \"PANSY\", \"PAPER\", \"PARSNIP\", \"PEA\", \"PEACH\", \"PEANUT\", \"PEAR\", \"PEARL\", \"PEBBLE\", \"PENIS\", \"PEPPER\", \"PINEAPPLE\", \"PINECONE\", \"PLANT\", \"PLUM\", \"POD\", \"POO\", \"POOP\", \"POTATO\", \"PRUNE\", \"PULSE\", \"PUMPKIN\", \"QUARTZ\", \"QUILL\", \"RAINBOW\", \"RAISIN\", \"RHUBARB\", \"RICE\", \"ROCK\", \"ROPE\", \"ROSE\", \"ROSEBUD\", \"RUBY\", \"RUNNERBEAN\", \"SALT\", \"SAND\", \"SAPPHIRE\", \"SEASHELL\", \"SEAWEED\", \"SEED\", \"SHELL\", \"SHIT\", \"SILK\", \"SKIN\", \"SKULL\", \"SLAB\", \"SNOWBALL\", \"SNOWFLAKE\", \"SOIL\", \"SOUP\", \"SPACE\", \"SPICE\", \"SPICES\", \"SPINACH\", \"STARDUST\", \"STEAM\", \"STICK\", \"STONE\", \"STRAWBERRY\", \"STRING\", \"SUNFLOWER\", \"SUNSHINE\", \"SWEETCORN\", \"TATTOO\", \"THREE\", \"THYME\", \"TIME\", \"ΤΟΜΑΤΟ\", \"TOOL\", \"TULIP\", \"TURNIP\", \"TWIG\", \"TWO\", \"VEIN\", \"WALNUT\", \"WATER\", \"WATERMELON\", \"WEED\", \"WILDLIFE\", \"WIRE\", \"WOOL\", \"WORM\"],\n\t\t\t\tNaturalBig: [\"ATLAS\", \"BEACH\", \"BUSH\", \"CACTUS\", \"CANAL\", \"CAVE\", \"CLIFF\", \"CLOUD\", \"CLOUDS\", \"COUNTRY\", \"COUNTRYSIDE\", \"CREEK\", \"CREVASSE\", \"DESSERT\", \"ENERGY\", \"ESTUARY\", \"FARM\", \"FIELD\", \"FIRE\", \"GALAXY\", \"GHOST\", \"HAIL\", \"HEDGE\", \"JUNGLE\", \"LAKE\", \"LAND\", \"LAVA\", \"LIGHT\", \"LIGHTNING\", \"MEADOW\", \"MINERAL\", \"MONSTERA\", \"MOUNTAIN\", \"NEST\", \"OCEAN\", \"PATH\", \"PATHWAY\", \"PLANET\", \"POND\", \"RAIL\", \"RAIN\", \"RAINBOW\", \"RAINFOREST\", \"RAINFORREST\", \"RESERVOIR\", \"RIVER\", \"ROCK\", \"ROSEBUSH\", \"ROSEGARDEN\", \"SEA\", \"SEAWEED\", \"SLEET\", \"SNOW\", \"SPACE\", \"STAR\", \"STONE\", \"STORM\", \"STREAM\", \"SUN\", \"THUNDER\", \"TIME\", \"TREE\", \"VINEYARD\", \"VOLCANO\", \"WATERFALL\", \"WILDLIFE\", \"WORLD\"],\n\t\t\t\tAnimals: [\"AARDVARK\", \"ADDER\", \"ALLIGATOR\", \"ANACONDA\", \"ANCHOVIE\", \"ANGELFISH\", \"ANTEATER\", \"ANTELOPE\", \"ARMADILLO\", \"BABOON\", \"BADGER\", \"BANDICOOT\", \"BASSS\", \"BEAGLE\", \"BEAR\", \"BEATLE\", \"BEAVER\", \"BEE\", \"BEETLE\", \"BISON\", \"BLACKBIRD\", \"BLUETIT\", \"BOA\", \"BOACONSTRICTOR\", \"BOBCAT\", \"BOXER\", \"BUG\", \"BULLDOG\", \"BULLFROG\", \"BULLMASTIFF\", \"BUMBLEBEE\", \"BUTTERFLY\", \"BUZZARD\", \"CALF\", \"CAMEL\", \"CANARY\", \"CAPYBARA\", \"CARP\", \"CAT\", \"CATERPILLAR\", \"CATFISH\", \"CATTLE\", \"CENTIPEDE\", \"CHAMELEON\", \"CHEETAH\", \"CHICKEN\", \"CHIHUAHUA\", \"CHIMPANZEE\", \"CICADA\", \"COBRA\", \"COCKATOO\", \"COCKROACH\", \"COD\", \"CORGI\", \"COUGAR\", \"COW\", \"CRAB\", \"CRANEFLY\", \"CRAYFISH\", \"CRICKET\", \"CROCODILE\", \"CROW\", \"CUTTLEFISH\", \"DACHSHUND\", \"DALMATIAN\", \"DEER\", \"DODO\", \"DOG\", \"DOLPHIN\", \"DONKEY\", \"DORMOUSE\", \"DRAGONFLY\", \"DUCK\", \"EAGLE\", \"EARTHWORM\", \"EEL\", \"ELEPHANT\", \"FALCON\", \"FERRET\", \"FINCH\", \"FIREFLY\", \"FISH\", \"FLAMINGO\", \"FLY\", \"FOX\", \"FOXHOUND\", \"FROG\", \"GAZELLE\", \"GECKO\", \"GELDING\", \"GERBIL\", \"GERMANSHEPHERD\", \"GIBBON\", \"GIRAFFE\", \"GLOWWORM\", \"GOAT\", \"GOLDCREST\", \"GOLDENEAGLE\", \"GOLDENRETRIEVER\", \"GOLDFISH\", \"GOOSE\", \"GOPHER\", \"GORILLA\", \"GOSHAWK\", \"GRASSHOPPER\", \"GRASSSNAKE\", \"GREATDANE\", \"GREENFLY\", \"GREENFROG\", \"GRIZZLYBEAR\", \"GUINEAPIG\", \"HADDOCK\", \"HALIBUT\", \"HAMSTER\", \"HARE\", \"HAWK\", \"HEFFER\", \"HERON\", \"HIPPO\", \"HIPPOPOTAMUS\", \"HORNET\", \"HORSE\", \"HORSEFLY\", \"HUMAN\", \"HUMMINGBIRD\", \"HUSKY\", \"HYENA\", \"IBEX\", \"IGUANA\", \"INSECT\", \"JACKAL\", \"JAGUAR\", \"JELLYFISH\", \"KANGAROO\", \"KINGFISHER\", \"KOALA\", \"LADYBIRD\", \"LADYBUG\", \"LAMA\", \"LAMB\", \"LEOPARD\", \"LIGER\", \"LION\", \"LIZARD\", \"LIZZARD\", \"LLAMA\", \"LOBSTER\", \"LOCUST\", \"LUMPFISH\", \"MACKEREL\", \"MAGGOT\", \"MAGPIE\", \"MALLARD\", \"MANDRILL\", \"MARLIN\", \"MASTIF\", \"MASTIFF\", \"MAYFLY\", \"MONGOOSE\", \"MONKEY\", \"MOOSE\", \"MOSQUITO\", \"MOTH\", \"MOUSE\", \"MULE\", \"NARWHAL\", \"NEWT\", \"NIGHTINGALEOCTOPUS\", \"ORANGUTAN\", \"OSTRICH\", \"OTTER\", \"OWL\", \"OYSTER\", \"PANDA\", \"PANTHER\", \"PARAKEET\", \"PARROT\", \"PARTRIDGE\", \"PEACOCK\", \"PELICAN\", \"PENGUIN\", \"PHEASANT\", \"PIG\", \"PIGEON\", \"PIPISTRELLE\", \"PIRANHA\", \"PITBULL\", \"PLATYPUS\", \"PONY\", \"POODLE\", \"PRAWN\", \"PUFFIN\", \"PUMA\", \"PYTHON\", \"QUAIL\", \"RABBIT\", \"RACCOON\", \"RAT\", \"RATTLESNAKE\", \"RAVEN\", \"REINDEER\", \"RETRIEVER\", \"RHINO\", \"RHINOCEROS\", \"ROADRUNNER\", \"ROBIN\", \"ROOSTER\", \"ROTTWEILER\", \"SALAMANDER\", \"SALMON\", \"SAUSAGE\", \"SCALLOP\", \"SCORPION\", \"SEABASS\", \"SEAGULL\", \"SEAHORSE\", \"SEAL\", \"SHARK\", \"SHEEP\", \"SHEEPDOG\", \"SHREW\", \"SHRIMP\", \"SIDEWINDER\", \"SILKWORM\", \"SILVERBACK\", \"SKUNK\", \"SLOTH\", \"SLUG\", \"SNAIL\", \"SNAKE\", \"SNAPPER\", \"SPANIEL\", \"SPARROW\", \"SPIDER\", \"SQUID\", \"SQUIRREL\", \"STALK\", \"STARFISH\", \"STARLING\", \"STURGEON\", \"SWALLOW\", \"SWALLOWTAIL\", \"SWAN\", \"SWORDFISH\", \"TADPOLE\", \"TARANTULA\", \"TERMITE\", \"TERRIER\", \"THRUSH\", \"TICK\", \"TIGER\", \"TOAD\", \"TORTOISE\", \"TOUCAN\", \"TROUT\", \"TUNA\", \"TURKEY\", \"TURTLE\", \"VIPER\", \"VOUL\", \"VULTURE\", \"WALLABY\", \"WALRUS\", \"WARTHOG\", \"WASP\", \"WEASEL\", \"WHALE\", \"WHIPPET\", \"WILDEBEEST\", \"WOLF\", \"WOLVERINE\", \"WOMBAT\", \"WOODLOUSE\", \"WOODPECKER\", \"WOODRAT\", \"WORM\", \"ZEBRA\"],\n\t\t\t\tCountries: [\"AFGHANISTAN\", \"ALBANIA\", \"ALGERIA\", \"AMERICA\", \"ANDORRA\", \"ANGOLA\", \"ANGUILLA\", \"ANTIGUA AND BARBUDA\", \"ARGENTINA\", \"ARMENIA\", \"ARUBA\", \"AUSTRALIA\", \"AUSTRIA\", \"AZERBAIJAN\", \"BAHAMAS\", \"BAHRAIN\", \"BANGLADESH\", \"BARBADOS\", \"BELARUS\", \"BELGIUM\", \"BELIZE\", \"BENIN\", \"BERLIN\", \"BERMUDA\", \"BHUTAN\", \"BOLIVIA\", \"BOSNIA\", \"BOTSWANA\", \"BRAZIL\", \"BRUNEI\", \"BULGARIA\", \"BURKINA FASO\", \"BURMA\", \"BURUNDI\", \"CAMBODIA\", \"CAMEROON\", \"CANADA\", \"CAPE VERDE\", \"CAYMAN ISLANDS\", \"CHAD\", \"CHILE\", \"CHINA\", \"COLOMBIA\", \"COMOROS\", \"CONGO\", \"COSTA RICA\", \"CROATIA\", \"CUBA\", \"CYPRUS\", \"CZECH REPUBLIC\", \"DENMARK\", \"DJIBOUTI\", \"DOMINICA\", \"DOMINICAN REPUBLIC\", \"ECUADOR\", \"EGYPT\", \"EL SALVADOR\", \"ERITREA\", \"ESTONIA\", \"ETHIOPIA\", \"FIJI\", \"FINLAND\", \"FRANCE\", \"GABON\", \"GAMBIA\", \"GEORGIA\", \"GERMANY\", \"GHANA\", \"GIBRALTAR\", \"GREECE\", \"GREENLAND\", \"GRENADA\", \"GUATEMALA\", \"GUERNSEY\", \"GUINEA\", \"GUYANA\", \"HAITI\", \"HONDURAS\", \"HONG KONG\", \"HUNGARY\", \"ICELAND\", \"INDIA\", \"INDONESIA\", \"IRAN\", \"IRAQ\", \"IRELAND\", \"ISRAEL\", \"ITALY\", \"IVORY COAST\", \"JAMAICA\", \"JAPAN\", \"JERSEY\", \"JORDAN\", \"KAZAKHSTAN\", \"KENYA\", \"KIRIBATI\", \"KOREA\", \"KUWAIT\", \"LAOS\", \"LATVIA\", \"LEBANON\", \"LIBERIA\", \"LIBYA\", \"LITHUANIA\", \"LUXEMBOURG\", \"MACEDONIA\", \"MADAGASCAR\", \"MALAWI\", \"MALAYSIA\", \"MALDIVES\", \"MALI\", \"MALTA\", \"MAURITANIA\", \"MAURITIUS\", \"MEXICO\", \"MOLDOVA\", \"MONACO\", \"MONGOLIA\", \"MONTENEGRO\", \"MONTSERRAT\", \"MOROCCO\", \"MOZAMBIQUE\", \"NAMIBIA\", \"NAURU\", \"NEPAL\", \"NETHERLANDS\", \"NEW ZEALAND\", \"NICARAGUA\", \"NIGER\", \"NIGERIA\", \"NIUE\", \"NORFOLK ISLAND\", \"NORWAY\", \"OMAN\", \"PAKISTAN\", \"PALAU\", \"PANAMA\", \"PAPUA NEW GUINEA\", \"PARAGUAY\", \"PERU\", \"PHILIPPINES\", \"POLAND\", \"PORTUGAL\", \"PUERTO RICO\", \"QATAR\", \"ROMANIA\", \"RUSSIA\", \"RWANDA\", \"SAINT LUCIA\", \"SAINT VINCENT\", \"SAMOA\", \"SAUDI ARABIA\", \"SENEGAL\", \"SERBIA\", \"SIERRA LEONE\", \"SINGAPORE\", \"SLOVAKIA\", \"SLOVENIA\", \"SOMALIA\", \"SOUTH AFRICA\", \"SOUTH KOREA\", \"SPAIN\", \"SRI LANKA\", \"SUDAN\", \"SWEDEN\", \"SWITZERLAND\", \"SYRIA\", \"TAIWAN\", \"TANZANIA\", \"THAILAND\", \"TONGA\", \"TUNISIA\", \"TURKEY\", \"TUVALU\", \"UGANDA\", \"UKRAINE\", \"UNITED ARAB EMIRATES\", \"UNITED KINGDOM\", \"UNITED STATES\", \"URUGUAY\", \"USA\", \"VENEZUELA\", \"VIETNAM\", \"YEMEN\", \"ZAMBIA\", \"ZIMBABWE\"],\n\t\t\t\tComboMix: [\"ANT\", \"APHID\", \"APPLE\", \"APRICOT\", \"APRIL\", \"AQUARIUS\", \"ARIES\", \"AUGUST\", \"AUNT\", \"AUNTIE\", \"AVOCADO\", \"BANANA\", \"BEE\", \"BEETLE\", \"BLACK\", \"BLOSSOM\", \"BLUE\", \"BLUEBELL\", \"BLUEBERRY\", \"BROWN\", \"BUMBLEBEE\", \"BUTTERCUP\", \"BUTTERFLY\", \"CANCER\", \"CAPRICORN\", \"CATERPILLAR\", \"CENTIPEDE\", \"CHERRY\", \"CIRCLE\", \"CLEMENTINE\", \"CLOVER\", \"COCKROACH\", \"COCONUT\", \"CROSS\", \"CUBE\", \"CYLINDER\", \"DAFFODIL\", \"DAISY\", \"DECEMBER\", \"DODECAHEDRON\", \"DRAGONFLY\", \"EARTH\", \"FEBRUARY\", \"FLOWER\", \"FLY\", \"FLYTRAP\", \"FRUITFLY\", \"GDAŃSK\", \"GEMINI\", \"GERANIUM\", \"GOLD\", \"GRAPE\", \"GRAPEFRUIT\", \"GRASS\", \"GREEN\", \"GREY\", \"HEXAGON\", \"HORNET\", \"INDIGO\", \"JANUARY\", \"JULY\", \"JUNE\", \"JUNIPER\", \"JUPITER\", \"KIWI\", \"LADYBIRD\", \"LADYBUG\", \"LEMON\", \"LEO\", \"LIBRA\", \"LILLY\", \"LILY\", \"LIME\", \"LIZARD\", \"MAGENTA\", \"MAGGOT\", \"MARCH\", \"MARS\", \"MAY\", \"MAYFLY\", \"MERCURY\", \"MOON\", \"MOSQUITO\", \"MOTH\", \"NEPTUNE\", \"NOVEMBER\", \"OBLONG\", \"OCTAGON\", \"OCTOBER\", \"ORANGE\", \"ORCHID\", \"PANSY\", \"PEAR\", \"PENTAGON\", \"PINEAPPLE\", \"PINK\", \"PISCES\", \"PLUTO\", \"PLUTO\", \"PURPLE\", \"RED\", \"ROSE\", \"SAGITTARIUS\", \"SATURN\", \"SCORPIO\", \"SEPTEMBER\", \"SILVER\", \"SPIDER\", \"SQUARE\", \"STAR\", \"STRAWBERRY\", \"SUN\", \"SUNFLOWER\", \"TAURUS\", \"ΤΟΜΑΤΟ\", \"TRIANGLE\", \"TULIP\", \"URANUS\", \"VENUS\", \"VIOLET\", \"VIRGO\", \"WASP\", \"WHITE\", \"WORM\", \"YELLOW\"]\n\t\t\t},\n\t\t\tstraightLetters: [\"A\", \"E\", \"F\", \"H\", \"I\", \"K\", \"L\", \"M\", \"N\", \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"É\", \"À\", \"Â\", \"Ã\", \"Á\", \"Ä\", \"Å\", \"Ă\", \"Î\", \"Ț\", \"Ê\", \"Ŵ\", \"Ŷ\", \"Ï\", \"Í\", \"È\", \"Æ\", \"Ë\", \"Ÿ\", \"Ẽ\", \"Ĩ\", \"Ỹ\", \"Ñ\"],\n\t\t\tcurvedLetters: [\"C\", \"O\", \"S\", \"G\", \"O\", \"Q\", \"S\", \"U\", \"Ç\", \"Ö\", \"Õ\", \"Ș\", \"Ô\", \"Ó\", \"Ò\", \"Ş\"],\n\t\t\tbothLetters: [\"B\", \"D\", \"G\", \"J\", \"P\", \"Q\", \"R\", \"U\", \"Ú\", \"Ü\", \"ß\", \"Û\", \"Œ\", \"Ù\", \"Ũ\", \"G̃\"],\n\t\t\tvowels: [\"A\", \"I\", \"U\", \"E\", \"O\", \"À\", \"Â\", \"Æ\", \"É\", \"È\", \"Ê\", \"Ë\", \"Î\", \"Ï\", \"Í\", \"Ô\", \"Œ\", \"Ù\", \"Û\", \"Ü\", \"Ö\", \"Ä\", \"Ó\", \"Ú\", \"Ã\", \"Õ\", \"Á\", \"Å\", \"Ă\", \"Ò\", \"Ẽ\", \"Ĩ\", \"Ũ\"],\n\t\t\tselectedCategories: null,\n\t\t\tselectedWord: \"\",\n\t\t\tselectedCategory: '',\n\t\t\twordLength: 0,\n\t\t\tvowelPositions: [null, null],\n\t\t\tletterShape: \"\",\n\t\t\treveal: false,\n\t\t\trevealedLetterShape: false,\n\t\t\trevealedCategory: false,\n\t\t\tconsiderYAsVowel: false,\n\t\t\tgeneratedWordFromLetter: '',\n\t\t\tlightPositions: [\n\t\t\t\t{ x: '15.5%', y: '16%' },\n\t\t\t\t{ x: '21.3%', y: '7%' },\n\t\t\t\t{ x: '29.6%', y: '4%' },\n\t\t\t\t{ x: '34.3%', y: '11%' },\n\t\t\t\t{ x: '45%', y: '45%' },\n\t\t\t\t{ x: '50%', y: '50%' },\n\t\t\t\t{ x: '61.5%', y: '7%' },\n\t\t\t\t{ x: '69%', y: '2%' },\n\t\t\t\t{ x: '75.3%', y: '4%' },\n\t\t\t\t{ x: '80.5%', y: '12%' },\n\t\t\t],\n\t\t\tactiveLight: 0,\n\t\t\tgameStarted: false,\n\t\t\tshowSettings: false,\n\t\t};\n\t},\n\tcreated() {\n\t\tdocument.title = \"Enigma Training Tool\";\n\n\t\tconst savedSetting = localStorage.getItem('considerYAsVowel');\n\t\tif (savedSetting !== null) {\n\t\t\tthis.considerYAsVowel = JSON.parse(savedSetting);\n\t\t}\n\n\t\tconst savedSelectedCategories = localStorage.getItem('selectedCategories');\n\t\tif (savedSelectedCategories !== null) {\n\t\t\tthis.selectedCategories = JSON.parse(savedSelectedCategories);\n\t\t} else {\n\t\t\t// If there's no saved selection, default to all categories\n\t\t\tthis.selectedCategories = Object.keys(this.categories);\n\t\t}\n\t},\n\twatch: {\n\t\tconsiderYAsVowel(newVal) {\n\t\t\tlocalStorage.setItem('considerYAsVowel', newVal);\n\t\t},\n\t\tselectedCategories: {\n\t\t\thandler(newVal) {\n\t\t\t\tlocalStorage.setItem('selectedCategories', JSON.stringify(newVal));\n\t\t\t},\n\t\t\tdeep: true\n\t\t}\n\t},\n\tmethods: {\n\t\tstartGame() {\n\t\t\tthis.gameStarted = true;\n\t\t\tthis.generateWord();\n\t\t},\n\t\tresetWord() {\n\t\t\tthis.reveal = false;  // Hide the revealed word\n\t\t\tthis.gameStarted = false;\n\t\t},\n\t\tgenerateWord() {\n\t\t\tconst availableCategories = this.selectedCategories.length ? this.selectedCategories : Object.keys(this.categories);\n\t\t\tthis.selectedCategory = availableCategories[Math.floor(Math.random() * availableCategories.length)];\n\n\t\t\t// Pick a random word from the selected category\n\t\t\tconst words = this.categories[this.selectedCategory];\n\t\t\tthis.selectedWord = words[Math.floor(Math.random() * words.length)];\n\n\t\t\tthis.wordLength = this.selectedWord.length;\n\n\t\t\tthis.vowelPositions = this.getVowelPositions(this.selectedWord, true); // Assuming Y is considered as a vowel by default\n\t\t\tthis.letterShape = this.getLetterShape(this.selectedWord[0]);\n\t\t},\n\t\tgetVowelPositions(word) {\n\t\t\tconst vowels = this.considerYAsVowel ? \"AEIOUY\" : \"AEIOU\";\n\t\t\tconst positions = [];\n\n\t\t\tfor (let i = 0; i < word.length; i++) {\n\t\t\t\tif (vowels.includes(word[i].toUpperCase())) {\n\t\t\t\t\tpositions.push(i + 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [positions[0] || null, positions[1] || null];\n\t\t},\n\t\tgetLetterShape(letter) {\n\t\t\tif (this.straightLetters.includes(letter.toUpperCase())) {\n\t\t\t\treturn \"Straight Lines\";\n\t\t\t} else if (this.curvedLetters.includes(letter.toUpperCase())) {\n\t\t\t\treturn \"Curved Lines\";\n\t\t\t} else if (this.bothLetters.includes(letter.toUpperCase())) {\n\t\t\t\treturn \"Both Curved and Straight Lines\";\n\t\t\t}\n\t\t\treturn \"Unknown\";\n\t\t},\n\t\trevealWord() {\n\t\t\tthis.reveal = true;\n\t\t},\n\t\tasync showWordLength() {\n\t\t\tfor (let i = 0; i < this.wordLength; i++) {\n\t\t\t\tthis.activeLight = 10 - (i % 10);\n\t\t\t\tawait this.wait(500); // Wait for 0.5 seconds\n\t\t\t\tthis.activeLight = 0;\n\t\t\t\tawait this.wait(500); // Wait for 0.5 seconds before moving to the next light\n\t\t\t}\n\t\t},\n\t\tasync showFirstVowel() {\n\t\t\tthis.activeLight = 10 - this.vowelPositions[0] + 1;\n\t\t\tawait this.wait(1000);\n\t\t\tthis.activeLight = 0;\n\t\t},\n\t\tasync showSecondVowel() {\n\t\t\tthis.activeLight = 10 - this.vowelPositions[1] + 1;\n\t\t\tawait this.wait(1000);\n\t\t\tthis.activeLight = 0;\n\t\t},\n\t\trevealLetterShape() {\n\t\t\tthis.revealedLetterShape = true;\n\t\t},\n\t\twait(ms) {\n\t\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t\t},\n\t\trevealCategory() {\n\t\t\tthis.revealedCategory = true;\n\t\t},\n\t\tupdateYAsVowelSetting(newVal) {\n\t\t\tlocalStorage.setItem('considerYAsVowel', newVal);\n\t\t},\n\t\tgetWordFromLetterIndex(index) {\n\t\t\tlet selectedLetter;\n\n\t\t\t// Handle special cases: 2, 3, 4, and \"last\"\n\t\t\tswitch (index) {\n\t\t\t\tcase 2:\n\t\t\t\tcase 3:\n\t\t\t\tcase 4:\n\t\t\t\t\tselectedLetter = this.selectedWord[index - 1]; // -1 because array indices start at 0\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tselectedLetter = this.selectedWord[this.selectedWord.length - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.generatedWordFromLetter = \"Invalid index!\";\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!selectedLetter) {\n\t\t\t\tthis.generatedWordFromLetter = \"Word is too short!\";\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet possibleWords = [];\n\t\t\tfor (const cat in this.categories) {\n\t\t\t\tpossibleWords = possibleWords.concat(this.categories[cat].filter(word => word[0].toUpperCase() === selectedLetter.toUpperCase()));\n\t\t\t}\n\n\t\t\tif (possibleWords.length === 0) {\n\t\t\t\tthis.generatedWordFromLetter = `No words found starting with ${selectedLetter}`;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.generatedWordFromLetter = possibleWords[Math.floor(Math.random() * possibleWords.length)];\n\t\t}\n\t}\n};\n</script>\n\n<style scoped>\n.hand-container {\n\tposition: relative;\n\twidth: 1920px;\n\tmax-width: 100%;\n\tmargin: 0 auto;\n}\n\n.hand-container img {\n\tobject-fit: cover;\n\tmax-width: 100%;\n\theight: auto;\n}\n\n.hand-container .reveal {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n}\n\n.light-effect {\n\tposition: absolute;\n\twidth: 2vw;\n\theight: 2vw;\n\tbackground:\n\t\tradial-gradient(circle, rgba(214, 179, 11, 0.2), transparent 40%),\n\t\tradial-gradient(circle, rgba(214, 179, 11, 0.4), transparent 30%),\n\t\tradial-gradient(circle, rgba(214, 179, 11, 0.6), transparent 20%),\n\t\tradial-gradient(circle, #D6B30B, #D6B30B 50%, transparent 70%);\n\tborder-radius: 50%;\n\tfilter: drop-shadow(0 0 15px #D6B30B) drop-shadow(0 0 25px #D6B30B) drop-shadow(0 0 35px #D6B30B);\n\tz-index: 9999;\n\topacity: 0;\n\t/* Default state is hidden */\n\ttransition: opacity 0.5s;\n\t/* Half-second fade in/out */\n}\n\n.light-effect.active-light {\n\topacity: 1;\n}\n\n.controls {\n\tposition: fixed;\n\tbottom: 5%;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tz-index: 1000;\n}\n\n.controls h2 {\n\tcolor: #000;\n\tmargin: 20px 0 10px 0;\n}\n\n.controls .game-controls {\n\tbackground-color: #fff;\n\tborder-radius: 10px;\n\twidth: 800px;\n\tmax-width: 100%;\n\tpadding: 20px;\n}\n\nbutton {\n\tfont-family: sans-serif;\n\tfont-size: 16px;\n\tfont-weight: 600;\n\tborder-radius: 4px;\n\tcolor: #fff;\n\tmargin: 5px;\n\tcursor: pointer;\n\tbackground-color: transparent;\n\tcolor: #D6B30B;\n\ttext-decoration: underline;\n}\n\nbutton.btn {\n\tfont-size: 20px;\n\tpadding: 10px 20px;\n\tborder-radius: 5px;\n\tbackground-color: #D6B30B;\n\tcolor: #000;\n\ttext-decoration: none;\n}\n\nbutton.btn.light {\n\tbackground-color: lightgrey;\n\tcolor: #000;\n\ttext-decoration: none;\n}\n\n.settings-popup {\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 400px;\n\tmax-width: 100%;\n\tpadding: 20px;\n\tbackground-color: #ffffff;\n\tborder: 1px solid #cccccc;\n\tborder-radius: 5px;\n\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n\tz-index: 1000;\n\tcolor: black;\n\ttext-align: left;\n}\n\n.settings-popup .close {\n\tposition: absolute;\n\ttop: 10px;\n\tright: 10px;\n\tcursor: pointer;\n}\n\n.settings-popup .section {\n\tmargin: 20px 0;\n}\n\n.settings-popup .section input,\n.settings-popup .section label {\n\tcursor: pointer;\n}\n\n.reveal {\n\tfont-size: 30px;\n}\n\n.message {\n\tfont-weight: 700;\n\tfont-size: 25px;\n\tmargin: 10px 0;\n}\n\n@media (max-width: 767px) {\n\t.hand-container {\n\t\tmargin-top: 50px;\n\t}\n\n\t.reveal {\n\t\ttop: -50px !important;\n\t\tfont-size: 20px;\n\t\twidth: 100%;\n\t}\n\n\t.message {\n\t\tfont-size: 20px;\n\t}\n\n\t.controls {\n\t\twidth: 100%;\n\t}\n\n\t.controls h2 {\n\t\tfont-size: 18px;\n\t}\n\n\t.controls .game-controls {\n\t\twidth: 100%;\n\t}\n\n\t.controls br {\n\t\tdisplay: none;\n\t}\n}\n</style>","import { render } from \"./HelloWorld.vue?vue&type=template&id=573a38b2&scoped=true\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=573a38b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-573a38b2\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=33664de2\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=33664de2&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkenigmatrainer\"] = self[\"webpackChunkenigmatrainer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3920); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","class","src","_imports_0","alt","width","_hoisted_1","_createVNode","_component_HelloWorld","height","xmlns","d","_hoisted_2","_createElementBlock","$data","showSettings","onClick","_cache","$event","_hoisted_4","_hoisted_5","_hoisted_6","type","considerYAsVowel","_hoisted_7","_hoisted_8","_Fragment","_renderList","Object","keys","categories","category","key","selectedCategories","value","_toDisplayString","_hoisted_10","_hoisted_11","position","style","_normalizeStyle","top","lightPositions","y","left","x","_normalizeClass","activeLight","reveal","_hoisted_12","selectedWord","gameStarted","_hoisted_13","_hoisted_14","args","$options","startGame","revealedCategory","_hoisted_15","selectedCategory","revealedLetterShape","_hoisted_16","letterShape","generatedWordFromLetter","_hoisted_17","_hoisted_18","revealCategory","_hoisted_19","_hoisted_20","showWordLength","showFirstVowel","showSecondVowel","revealLetterShape","_hoisted_21","_hoisted_22","getWordFromLetterIndex","_hoisted_23","_hoisted_24","revealWord","resetWord","data","ManmadeInHand","ManmadeBig","NaturalInHand","NaturalBig","Animals","Countries","ComboMix","straightLetters","curvedLetters","bothLetters","vowels","wordLength","vowelPositions","created","document","title","savedSetting","localStorage","getItem","this","JSON","parse","savedSelectedCategories","watch","newVal","setItem","handler","stringify","deep","methods","generateWord","availableCategories","length","Math","floor","random","words","getVowelPositions","getLetterShape","word","positions","i","includes","toUpperCase","push","letter","wait","ms","Promise","resolve","setTimeout","updateYAsVowelSetting","index","selectedLetter","possibleWords","cat","concat","filter","__exports__","name","components","HelloWorld","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}